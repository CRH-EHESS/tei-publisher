<TEI xmlns="http://www.tei-c.org/ns/1.0" xmlns:vg="http://www.vangoghletters.org/ns/" xmlns:pb="http://teipublisher.com/1.0" xml:lang="en">
    <teiHeader>
        <fileDesc>
            <titleStmt>
                <title>Van Gogh Letters</title>
            </titleStmt>
            <publicationStmt>
                <publisher>eXistSolutions GmbH</publisher>
                <availability>
                    <licence target="https://www.gnu.org/licenses/gpl-3.0.en.html">Distributed under GNU General Public License</licence>
                    <p>Copyright 2017 <ref target="http://existsolutions.com">eXistSolutions GmbH</ref>
                    </p>
                    <p>This program is free software: you can redistribute it and/or modify
                        it under the terms of the GNU General Public License as published by
                        the Free Software Foundation, either version 3 of the License, or
                        (at your option) any later version.</p>
                    <p>This program is distributed in the hope that it will be useful,
                        but WITHOUT ANY WARRANTY; without even the implied warranty of
                        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                        GNU General Public License for more details.</p>
                </availability>
            </publicationStmt>
            <sourceDesc>
                <p>Generated by <ref target="http://tei-publisher.com">TEI Publisher</ref>
                </p>
                <p>born digital</p>
            </sourceDesc>
        </fileDesc>
        <encodingDesc>
            <tagsDecl>
                <rendition source="vangogh.css"/>
            </tagsDecl>
        </encodingDesc>
        <revisionDesc>
            <change when="2019-01-28+01:00">Initial version</change>
        </revisionDesc>
    </teiHeader>
    <text>
        <body>
            <schemaSpec start="TEI teiCorpus" ident="vangogh" source="teipublisher.odd"> <elementSpec ident="pb" mode="change">
                    <model behaviour="webcomponent" useSourceRendition="true">
            <param name="content" value="@f || ':' || @n"/>
            <param name="facs" value="let $zone := id(substring-after(@facs, '#'), root($parameters?root)) return  'http://vangoghletters.org/vg/facsimiles/' ||     $zone/graphic[@mimeType=&#34;image/png&#34;]/@url"/>
            <param name="name" value="'pb-facs-link'"/>
            <param name="emit" value="'transcription'"/>
            <outputRendition xml:space="preserve">


            font-size: .85em;
background-color: #C0C0C0;
border-left: 1px solid black;
border-right: 1px solid black;
padding: 0 1em;


            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="ab" mode="change">
                    <model predicate="(ancestor::div[@type='translation'] or $parameters?view='normalized') and @rend='indent'" behaviour="paragraph">
            <outputRendition xml:space="preserve">
            text-indent: 20px;
            </outputRendition>
        </model>
                    <model predicate="ancestor::div[@type='translation'] or $parameters?view='normalized'" behaviour="paragraph"/>
                    <model predicate="@rend='indent'" behaviour="inline">
            <outputRendition xml:space="preserve">



            display: inline-block;
text-indent: 20px;



            </outputRendition>
        </model>
                    <model behaviour="inline"/>
                </elementSpec>
                <elementSpec ident="c" mode="change">
                    <model predicate="@type='kk'" behaviour="inline">
            <param name="content" value="','"/>
        </model>
                    <model predicate="@type='kp'" behaviour="inline">
            <param name="content" value="'.'"/>
        </model>
                    <model behaviour="inline"/>
                </elementSpec>
                <elementSpec ident="anchor" mode="change">
                    <model behaviour="note">
            <param name="label" value="@n/string()"/>
            <param name="content" value="let $n := @n return $get(.)/ancestor::TEI//div[@type='notes']//note[@n=$n]/node()"/>
            <outputRendition xml:space="preserve">



            font-size: .85em;
background-color: #C0C0C0;
padding: 0 .25em;
border-right: 1px solid black;
text-indent: 0;
margin: 0 .25em;



            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="teiHeader" mode="change">
                    <model predicate="$parameters?view='metadata'" behaviour="block" cssClass="metadata">
            <param name="content" value=".//sourceDesc//vg:letDesc"/>
            <outputRendition xml:space="preserve">
            font-size: .85em;
            </outputRendition>
        </model>
                    <model output="latex" behaviour="metadata"/>
                    <model output="fo" behaviour="omit"/>
                    <model output="web" predicate="$parameters?header='short'" behaviour="block"/>
                    <model output="web" predicate="$parameters?header='letter'" behaviour="inline">
            <param name="content" value="fileDesc/titleStmt/title"/>
            <param name="level" value="5"/>
        </model>
                </elementSpec>
                <elementSpec ident="note" mode="change">
                    <model predicate="$parameters?view='notes'" behaviour="listItem">
            <param name="n" value="@n"/>
        </model>
                    <model behaviour="block"/>
                </elementSpec>
                <elementSpec ident="div" mode="change">
                    <model predicate="$parameters?view='notes'" behaviour="list">
            <param name="content" value="for $anchor in .//anchor/@n return  root($parameters?root)//div[@type='notes']//note[@n=$anchor]"/>
            <param name="type" value="'custom'"/>
        </model>
                    <model predicate="@type='textualNotes'" behaviour="omit"/>
                    <model predicate="@type='title_page'" behaviour="block">
            <outputRendition xml:space="preserve">
            border: 1px solid black; padding: 5px;
            </outputRendition>
        </model>
                    <model predicate="parent::body or parent::front or parent::back" behaviour="section"/>
                    <model behaviour="block"/>
                </elementSpec>
            <elementSpec ident="lb" mode="change">
                    <model predicate="$parameters?view='normalized'" behaviour="omit"/>
                    <model behaviour="break" useSourceRendition="true">
            <param name="type" value="'line'"/>
            <param name="label" value="@n"/>
        </model>
                </elementSpec>
            <elementSpec ident="ref" mode="change">
                    <model predicate="not(@target)" behaviour="inline"/>
                    <model behaviour="inline">
            <outputRendition xml:space="preserve">
            text-decoration: underline;
            </outputRendition>
        </model>
                </elementSpec>
            <elementSpec ident="vg:letHeading" mode="add"/>
                <elementSpec ident="vg:letDesc" mode="add">
                    <modelSequence>
            <model behaviour="heading">
                <param name="content" value="'Source status:'"/>
                <param name="level" value="5"/>
            </model>
            <model behaviour="block">
                <param name="content" value="note[@type='sourceStatus']/node()"/>
            </model>
            <model behaviour="heading">
                <param name="content" value="'Location:'"/>
                <param name="level" value="5"/>
            </model>
            <model behaviour="block">
                <param name="content" value="note[@type='location']/node()"/>
            </model>
            <model behaviour="heading">
                <param name="content" value="'Date:'"/>
                <param name="level" value="5"/>
            </model>
            <model behaviour="block">
                <param name="content" value="note[@type='date']/node()"/>
            </model>
            <model behaviour="heading">
                <param name="content" value="'Additional:'"/>
                <param name="level" value="5"/>
            </model>
            <model behaviour="block">
                <param name="content" value="note[@type='additionalDetail']/node()"/>
            </model>
        </modelSequence>
                </elementSpec>
            </schemaSpec>
        </body>
    </text>
</TEI>
